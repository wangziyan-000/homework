public class Main {
    private void printReceipt(){
        System.out.println("********RECEIPT********");

        System.out.println("Order ID: " + orderID);
        System.out.println("Order pizzaIngredients: " + pizzaIngredients);
        System.out.println("Order sides: " + sides);
        System.out.println("Order drinks: " + drinks);
        System.out.println("Order  pizzaPrice: " + pizzaPrice);
        System.out.println("Order Total: " + orderTotal);
    }
}
public class SliceoHeaven {
    public String storeName;
    public String storeAddress;
    public String storeEmail;
    public long storePhone;
    

    public String pizzaIngredients;
    private double pizzaPrice;
    private String sides;
    private String drinks;

    private String orderID;
    private double orderTotal;
    public void takeOrder(String id, String piin, double total,String side,String drink,double pPrice){
        pizzaIngredients = piin;
        orderID = id;
        orderTotal = total;
        sides = side;
        drinks = drink;
        pizzaPrice = pPrice;

        Scanner scanner=new
        
        Scanner(System.in);

        System.out.printIn("Please pick any three of the following ingredients:
 1. Mushroom
 2. Paprika
 3. Sun-dried tomatoes
 4. Chicken
 5. Pineapple
 Enter any three choices (1, 2, 3,…) separated by spaces:");

 String[] =

 scanner.nextline().split("");

 String ingChoice1=ingredients[0];

 String ingChoice2=ingredients[1];

 String ingChoice3=ingredients[2];




        Scanner scanner=newingredients
        
        Scanner(System.in);
       
        System.out.printIn("Enter three ingredients for your pizza (use spaces to separate
 ingredients):");
       
        String[] ingredients=

        scanner.nextline().split("");

        String ing1=ingredients[0];
        
        String ing2=ingredients[1];

        String ing3=ingredients[2];

        System.out.printIn("Enter size of pizza (Small, Medium, Large):");

        String pizzaSize=scanner.nextline();

        System.out.printIn("Do you want extra cheese (Y/N):");

        String extraCheese=scanner.nextline();

        System.out.printIn("Enter one side dish (Calzone, Garlic bread, None):");

        String sideDish=scanner.nextline();
        
        System.out.printIn("Enter drinks(Cold Coffee, Cocoa drink, Coke, None):");

        String drinks=scanner.nextline();

        System.out.printIn("Would you like the chance to pay only half for your order? (Y/N):");

        String wantDiscount=scanner.nextline();

        System.out.printIn("Following are the side dish that go well with your pizza:
 1. Calzone
 2. Garlic bread
 3. Chicken puff
 4. Muffin
 5. Nothing for me
 What would you like? Pick one (1, 2, 3,…):");

 String[] =

 scanner.nextline().split("");

 String sideDishChoice1=ingredients[0];

 String sideDishChoice2=ingredients[1];

 String sideDishChoice3=ingredients[2];

 int sideDishChoice=scanner.nextInt();

 String sideDish;

 switch(sideDishChoice){
    case 1:

    sideDish="Calzone";
    break;
    case 2:

    sideDish="Garlic bread";
    break;

    case 3:

    sideDish="Chicken puff";
    break;

    case 4:

    sideDish="Muffin";
    break;

    case 4:

    sideDish="Nothing for me";
    break;
    default:
    sideDiish="Invalid choice";
    break;

 }

 try {
    System.out.print("Please enter your birth date (format: yyyy-MM-dd): ");
    String inputDate = scanner.nextLine();
    Date date = sdf.parse(inputDate);
    Date fiveYearsAgo = new Date(System.currentTimeMillis() - 5 * 365 * 24 * 60 * 60 * 1000L);
    Date oneTwentyYearsAgo = new Date(System.currentTimeMillis() - 120 * 365 * 24 * 60 * 60 * 1000L);

    if (date.before(fiveYearsAgo) || date.before(oneTwentyYearsAgo)) {
        System.out.println("Invalid date. You are either too young or too dead to order. Please enter a valid date:");
    } else {
        validDate = true;
        System.out.println("Valid birth date entered."); 
    }
} catch (ParseException e) {
    System.out.println("Invalid date format. Please enter a valid date (format: yyyy-MM-dd):");
}

        if(wantDiscount.equalsIgnoreCase("Y")){
            isItYourBirthday();

        }else{
            makeCardPayment();
        }
        scanner.close();
        
        System.out.println("Order accepted!");

        System.out.println("Order is being prepared");

        public static void isItYourBirthday(){
            
            System.out.println("Enter your birthday (in the format yyyy - MM - dd):");
        String birthdateStr = scanner.nextLine();
        LocalDate birthdate = LocalDate.parse(birthdateStr);
        LocalDate today = LocalDate.now();
        int age = Period.between(birthdate, today).getYears();
        if (age < 18 && birthdate.getDayOfMonth() == today.getDayOfMonth() && birthdate.getMonth() == today.getMonth()) {
            System.out.println("Congratulations! You pay only half the price for your order");
        } else {
            System.out.println("Too bad! You do not meet the conditions to get our 50% discount");
        }

        scanner.close();
    }
    public static void makeCardPayment() {
        Scanner scanner = new Scanner(System.in);

    
        System.out.println("Enter your card number:");
        long cardNumber = scanner.nextLong();

        scanner.close();

        while (true) {
            System.out.println("Enter the card number:");
            String cardNumber = scanner.nextLine();
            if (cardNumber.length() == 14 &&!cardNumber.equals(String.valueOf(blacklistedNumber))) {
                // Here you can perform the actual card payment processing
                break;
            } else {
                System.out.println("Invalid card number. Please enter a 14 - digit number that is not the blacklisted number.");
            }
        }
    }

    

public class CardPaymentProcessor {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        
        System.out.print("Please enter the card's expiry date (in the format yyyy-MM): ");
        String expiryDate = scanner.nextLine();

        
        System.out.print("Please enter the card's cvv number (3 digits): ");
        int cvv = scanner.nextInt();

        
        System.out.print("Please enter the card number: ");
        long cardNumber = scanner.nextLong();

        
        long blacklistedNumber = 12345678901234L; 

        processCardPayment(cardNumber, expiryDate, cvv, blacklistedNumber);

        scanner.close();
    }

    public static void processCardPayment(long cardNumber, String expiryDate, int cvv, long blacklistedNumber) {
        
        String cardNumberStr = Long.toString(cardNumber);
        if (cardNumberStr.length() == 14) {
            System.out.println("Card accepted");
        } else {
            System.out.println("Invalid card");
            return;
        }

        
        long firstCardDigit = Long.parseLong(cardNumberStr.substring(0, 1));

        
        if (cardNumber == blacklistedNumber) {
            System.out.println("Card is blacklisted. Please use another card.");
            return;
        }

        
        String lastFourDigits = cardNumberStr.substring(cardNumberStr.length() - 4);

        
        System.out.println("First card digit: " + firstCardDigit);
        System.out.println("Last four digits: " + lastFourDigits);
        System.out.println("Expiry date: " + expiryDate);
        System.out.println("CVV: " + cvv);
    }
}
        try{
            Thread.sleep(5000);
            makePizza( piin);
        } catch (InterruptedException e){
            System.out.println("Order is ready for pickup!");
        }

        System.out.println("Your order is ready!");

        printReceipt();


    }
    private void makePizza(String piin){
        pizzaIngredients = piin;
    }
    
    
    
}
public class processCardPayment{
    public String cardNumber;
    public String expiryDate;
    public int cvv;

    int cardLength=cardNumber.Length();
    if(cardLength==14){
        system.out.printIn("Card accpet");
    }
    else{
        system.out.printIn("Invaid card");
        return;
    }
    int firstCardDigit=Integer.parseInt(cardNumber.substring(0,1));

    String blacklistNumber;
    if(cardNumber.equals(blacklistNumber)){
        system.out.printIn("Card is blacklisted. Please use
 another card");
     return;
    }

}
